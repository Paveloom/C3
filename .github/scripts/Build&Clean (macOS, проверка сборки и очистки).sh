#!/bin/bash

# Вывод названия скрипта
printf "\nЗапущен скрипт для проверки сборки и очистки программы.\n"

# Определение начального числа ошибок
ERROR_COUNT=0

# Обновление переменной PATH
export PATH=$PATH:/opt/local/bin

# Определение функции для проверки команд
function check_if_succeeded {

    # Вывод информации о запущенной программе
    printf "\nПроверяется команда $@.\n"

    # Выполнение указанной команды
    $@

    local status=$?

    if [ $status -ne 0 ]; then
        printf "\n[!] Ошибка при выполнении команды $1.\n\n"
        ERROR_COUNT=$((ERROR_COUNT+1))
    fi

    return $status

}

# Переход в директорию с программой
cd Программа/

# Замена текущего make-файла на версию для gmake
cp Make-файлы/gmake Makefile

# Проверка на удачную сборку
check_if_succeeded "gmake"

# Выполнение очистки
printf "\nВыполняется очистка директории с объектными файлами.\n\n"
gmake clean

# Проверка, пуста ли папка с объектными файлами
printf "Проверяется, пуста ли директории с объектными файлами.\n\n"

if [ -z "$(ls Объектники/)" ]; then
   printf "Директория с объектными файлами пуста.\n"
else
   printf "[!] Директория с объектными файлами НЕ пуста.\n\n"
   ERROR_COUNT=$((ERROR_COUNT+1))
fi

# Переход в директорию с программой
cd ../Упражнение/Программа/

# Замена текущего make-файла на версию для gmake
cp ../../Make-файлы/gmake Makefile

# Проверка на удачную сборку
check_if_succeeded "gmake"

# Выполнение очистки
printf "\nВыполняется очистка директории с объектными файлами.\n\n"
gmake clean

# Проверка, пуста ли папка с объектными файлами
printf "Проверяется, пуста ли директории с объектными файлами.\n\n"

if [ -z "$(ls Объектники/)" ]; then
   printf "Директория с объектными файлами пуста.\n"
else
   printf "[!] Директория с объектными файлами НЕ пуста.\n\n"
   ERROR_COUNT=$((ERROR_COUNT+1))
fi

# Проверка числа ошибок
if [ "$ERROR_COUNT" -gt 0 ]; then

     printf "\nЧисло ошибок: $ERROR_COUNT\n\n"
     exit 1

else

     printf "\nВсё в порядке.\n"

fi